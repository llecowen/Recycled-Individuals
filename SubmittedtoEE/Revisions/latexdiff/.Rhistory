print("x is more than 10")
}
x <- 117
if(x<10){
print("x is less than 10")
} else if(x==10){
print("x is 10")
} else{
print(x is more than 10)
x <- 117
if(x<10){
print("x is less than 10")
} else if(x==10){
print("x is 10")
} else{
print('x is more than 10')
}
x <- 117
if(x<10){
print("x is less than 10")
} else if(x==10){
print("x is 10")
} else{
print("x is more than 10", quote=F)
}
for(i in 1:10){
print(i)
}
for(i in 1:10){
for(j in c('a','b','c')){
print(paste(i,j))
}
}
z<- 1
while(z>0.1){
z <- runif(1)
print(z)
}
fahr_to_kelvin <- function(tempF){
kelvin <- ((tempF-32)*(5/9))+273.15
return(kelvin)
}
fahr_to_kelvin <- function(tempF){
kelvin <- ((tempF-32)*(5/9))+273.15
return(kelvin)
}
temp_to_kelvin(75)
fahr_to_kelvin <- function(tempF){
kelvin <- ((tempF-32)*(5/9))+273.15
return(kelvin)
}
fahr_to_kelvin(75)
kelvin_to_fahr <-function(tempK){
fahr <- (kelvin-273.15)*(9/5)+32
}
fahr_to_kelvin <- function(tempF){
#tempF=
kelvin <- ((tempF-32)*(5/9))+273.15
return(kelvin)
}
kelvin_to_fahr <-function(tempK){
fahr <- (tempK-273.15)*(9/5)+32
return(fahr)
}
fahr_to_kelvin(75)
kelvin_to_fahr(fahr_to_kelvin(75))
source("temp_functions.R")
source("temp_functions.R")
fahr_to_kelvin(75)
kelvin_to_fahr(fahr_to_kelvin(75))
source("temp_functions.R")
fahr_to_kelvin(cucumber)
source("temp_functions.R")
fahr_to_kelvin(cucumber)
source("temp_functions.R")
fahr_to_kelvin(cucumber)
source("temp_functions.R")
fahr_to_kelvin(cucumber)
source("temp_functions.R")
fahr_to_kelvin(75)
kelvin_to_fahr(fahr_to_kelvin(75))
source("temp_functions.R")
fahr_to_kelvin(cucumber)
source("temp_functions.R")
fahr_to_kelvin("cucumber")
head(gapminder)
calcGDP<-function(data){
gdp <-data$pop * data$gdpPercap
return(gdp)
}
gapminder$GDP <- calcGDP(gapminder)
calcGDP<-function(data){
gdp <-data$pop * data$gdpPercap
return(gdp)
}
gapminder$GDP <- calcGDP(gapminder)
head(gapminder)
2+2
install.packages('knitr')
install.packages("knitr")
2+2
knitr::opts_chunk$set(echo = TRUE)
2+2
x <- 8
x <- 8
y <-c(2,6,8)
x^2
x^2
y^2
.7*50+0.3*95
knitr::opts_chunk$set(echo = TRUE)
min(UScereal$sugars)
3-14*8
14*8
knitr::opts_chunk$set(echo = TRUE)
source("http://www.openintro.org/stat/data/cdc.R")
View(cdc)
table(cdc$smoke100)
table(cdc$smoke100)
table(cdc$smoke100)/length(cdc$smoke100)
table(cdc$smoke100)
table(cdc$smoke100)/length(cdc$smoke100)
barplot(table(cdc$smoke100)/length(cdc$smoke100))
table(cdc$smoke100)
table(cdc$smoke100)/length(cdc$smoke100)
barplot(table(cdc$smoke100))
table(cdc$gender, cdc$smoke100)
table(cdc$gender, cdc$smoke100)
barplot(table(cdc$gender, cdc$smoke100))
table(cdc$exerany, cdc$smoke100)
barplot(table(cdc$exerany, cdc$smoke100))
boxplot(cdc$height)
boxplot(cdc$height ~ cdc$gender)
histogram(cdc$age)
hist(cdc$age)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~ cdc$gender)
hist(cdc$age)
hist(cdc$age, breaks=2)
hist(cdc$age)
hist(cdc$age, breaks=50)
hist(cdc$age)
hist(cdc$age, breaks=50)
hist(cdc$age, breaks=10)
hist(cdc$age)
hist(cdc$age, breaks=50)
hist(cdc$age, breaks=10)
hist(cdc$age)
hist(cdc$age, breaks=50)
hist(cdc$age, breaks=10)
hist(cdc$age)
hist(cdc$age, breaks=50)
hist(cdc$age, breaks=10)
table(cdc$exerany, cdc$smoke100)
barplot(table(cdc$exerany, cdc$smoke100))
?barplot
table(cdc$exerany, cdc$smoke100)
barplot(table(cdc$exerany, cdc$smoke100))
barplot(table(cdc$exerany, cdc$smoke100), beside=TRUE)
table(cdc$exerany, cdc$smoke100)
barplot(table(cdc$exerany, cdc$smoke100))
barplot(table(cdc$exerany, cdc$smoke100), beside=TRUE)
table(cdc$exerany, cdc$smoke100)
barplot(table(cdc$exerany, cdc$smoke100))
barplot(table(cdc$exerany, cdc$smoke100), beside=TRUE)
table(cdc$exerany, cdc$smoke100)
barplot(table(cdc$exerany, cdc$smoke100))
barplot(table(cdc$exerany, cdc$smoke100), beside=TRUE)
table(cdc$genhlth, cdc$exerany)
table(cdc$genhlth, cdc$exerany)
barplot(table(cdc$genhlth, cdc$exerany))
table( cdc$exerany, cdc$genhlth)
barplot(table(cdc$genhlth, cdc$exerany))
table( cdc$exerany, cdc$genhlth)
barplot(table(cdc$exerany. cdc$genhlth))
table( cdc$exerany, cdc$genhlth)
barplot(table(cdc$exerany, cdc$genhlth))
table( cdc$exerany, cdc$genhlth)
barplot(table(cdc$exerany, cdc$genhlth))
legend("topright")
table( cdc$exerany, cdc$genhlth)
barplot(table(cdc$exerany, cdc$genhlth), legend=T)
#creates a table with 2 variables
table(cdc$exerany, cdc$smoke100)
#stacked barplot
barplot(table(cdc$exerany, cdc$smoke100))
#not stacked barplot
barplot(table(cdc$exerany, cdc$smoke100), beside=TRUE)
#add legend
barplot(table(cdc$exerany, cdc$smoke100), beside=TRUE, legend=TRUE)
?barplot
#creates a table with 2 variables
table(cdc$exerany, cdc$smoke100)
#stacked barplot
barplot(table(cdc$exerany, cdc$smoke100))
#not stacked barplot
barplot(table(cdc$exerany, cdc$smoke100), beside=TRUE)
#add legend
barplot(table(cdc$exerany, cdc$smoke100), beside=TRUE, legend.text=c("Smoke","No Smoke"))
#creates a table with 2 variables
table(cdc$gender, cdc$smoke100)
#stacked barplot
barplot(table(cdc$gender, cdc$smoke100), xlab="Smoked at least 100 cigs")
#not stacked barplot
barplot(table(cdc$gender, cdc$smoke100), beside=TRUE, xlab="Smoked at least 100 cigs")
#add legend
#barplot(table(cdc$gender, cdc$smoke100), beside=TRUE, legend=TRUE)
barplot(table(cdc$gender, cdc$smoke100), beside=TRUE, legend.text=c("No Exercise","Exercise Some"))
#creates a table with 2 variables
table(cdc$gender, cdc$smoke100)
#stacked barplot
barplot(table(cdc$gender, cdc$smoke100), xlab="Smoked at least 100 cigs")
#not stacked barplot
barplot(table(cdc$gender, cdc$smoke100), beside=TRUE, xlab="Smoked at least 100 cigs")
#add legend
barplot(table(cdc$gender, cdc$smoke100), beside=TRUE, legend=TRUE)
barplot(table(cdc$gender, cdc$smoke100), beside=TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width = 5, fig.height=5)
plot(cdc$height, cdc$weight)
plot(cdc$weight, cdc$wtdesire)
cdc$wtdiff = cdc$weight - cdc$wtdesire
hist(cdc$wtdiff)
boxplot(cdc$wtdiff)
boxplot(cdc$wtdiff ~ cdc$gender)
mean(wt$diff)
mean(cdc$wtdiff)
median(cdc$wtdiff)
max(cdc$wtdiff)
min(cdc$wtdiff)
1-(0.8)^3
attach(cdc)
detach(cdc)
View(cdc)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width = 4.5, fig.height=4.5)
#Import in the Dataset
source("http://www.openintro.org/stat/data/cdc.R")
View(cdc)
#takes the categorical variable smoke100 and creates a table which determine how many fall in each category (0= has not smoked 100 cigs, 1=has smoked at least 100 cigs)
table(cdc$smoke100)
#takes the categorical variable smoke100 and creates a table which determine how what PERCENTAGE fall in each category (0 and 1)
#takes the categorical variable smoke100 and creates a BARPLOT which displays how many fall in each category (0 or 1)
#takes the categorical variable smoke100 and creates a table which determine how many fall in each category (0= has not smoked 100 cigs, 1=has smoked at least 100 cigs)
table(cdc$smoke100)
#takes the categorical variable smoke100 and creates a table which determine how what PERCENTAGE fall in each category (0 and 1)
table(cdc$smoke100)/length(cdc$smoke100)
#takes the categorical variable smoke100 and creates a BARPLOT which displays how many fall in each category (0 or 1)
#takes the categorical variable smoke100 and creates a table which determine how many fall in each category (0= has not smoked 100 cigs, 1=has smoked at least 100 cigs)
table(cdc$smoke100)
#takes the categorical variable smoke100 and creates a table which determine how what PERCENTAGE fall in each category (0 and 1)
table(cdc$smoke100)/length(cdc$smoke100)
#takes the categorical variable smoke100 and creates a BARPLOT which displays how many fall in each category (0 or 1)
barplot(table(cdc$smoke100))
#creates a table with 2 variables
table(cdc$gender, cdc$smoke100)
#stacked barplot
#not stacked barplot
#add x axis label
#add legend
#creates a table with 2 variables
table(cdc$gender, cdc$smoke100)
#stacked barplot
barplot(table(cdc$gender, cdc$smoke100))
#not stacked barplot
#add x axis label
#add legend
#creates a table with 2 variables
table(cdc$gender, cdc$smoke100)
#stacked barplot
barplot(table(cdc$gender, cdc$smoke100))
#not stacked barplot
barplot(table(cdc$gender, cdc$smoke100), beside=T)
#add x axis label
#add legend
#creates a table with 2 variables
table(cdc$gender, cdc$smoke100)
#stacked barplot
barplot(table(cdc$gender, cdc$smoke100))
#not stacked barplot
barplot(table(cdc$gender, cdc$smoke100), beside=T)
#add x axis label
barplot(table(cdc$gender, cdc$smoke100), xlab="Smoked 100 cigarette in lifetime")
#add legend
#creates a table with 2 variables
table(cdc$gender, cdc$smoke100)
#stacked barplot
barplot(table(cdc$gender, cdc$smoke100))
#not stacked barplot
barplot(table(cdc$gender, cdc$smoke100), beside=T)
#add x axis label
barplot(table(cdc$gender, cdc$smoke100), xlab="Smoked 100 cigarette in lifetime")
#add legend
barplot(table(cdc$gender, cdc$smoke100), xlab="Smoked 100 cigarette in lifetime", legend=T)
barplot(table(cdc$exerany, cdc$genhlth))
barplot(table(cdc$exerany, cdc$genhlth), beside=T)
barplot(table( cdc$genhlth, cdc$exerany), beside=T)
#scatterplot
plot(cdc$height, cdc$weight)
#scatterplot
plot(cdc$height, cdc$weight, pch=".")
#scatterplot
plot(cdc$height, cdc$weight, pch=19)
#scatterplot
plot(cdc$height, cdc$weight, pch=21)
#scatterplot
plot(cdc$height, cdc$weight, pch=25)
#scatterplot
plot(cdc$height, cdc$weight, pch=19)
#histogram
hist(cdc$age)
#histogram
hist(cdc$age)
hist(cdc$age, breaks=50)
#histogram
hist(cdc$age)
hist(cdc$age, breaks=50)
hist(cdc$age, breaks=5)
#boxplot
boxplot(cdc$age)
#boxplot by group
#boxplot
boxplot(cdc$height)
#boxplot by group
#boxplot
boxplot(cdc$height)
#boxplot by group
boxplot(cdc$height ~ cdc$gender)
cdc$wtdiff = cdc$weight - cdc$wtdesire
View(cdc)
boxplot(cdc$wtdiff)
boxplot(cdc$wtdiff)
cdc$wtdiff<-cdc$wtdiff[>=-200]
boxplot(cdc$wtdiff)
cdc<-cdc[cdc$wtdiff>-"200",]
boxplot(cdc$wtdiff)
cdc<-cdc[cdc$wtdiff<"500",]
boxplot(cdc$wtdiff)
cdc<-cdc[cdc$wtdiff<"500",]
boxplot(cdc$wtdiff~cdc$gender)
boxplot(cdc$wtdiff)
cdc<-cdc[cdc$wtdiff<"500",]
cdc<-cdc[cdc$wtdiff>"-200",]
boxplot(cdc$wtdiff~cdc$gender)
is.numeric(cdc$wtdiff)
cdc<-cdc[cdc$wtdiff<500,]
cdc<-cdc[cdc$wtdiff>-200,]
boxplot(cdc$wtdiff~cdc$gender)
cdc<-cdc[cdc$wtdiff<100,]
cdc<-cdc[cdc$wtdiff>-100,]
boxplot(cdc$wtdiff~cdc$gender)
#removes outliers
cdc<-cdc[cdc$wtdiff<100,] #only include rows where twdiff is <100
cdc<-cdc[cdc$wtdiff>-100,] #only include rows where twdiff is >-100
boxplot(cdc$wtdiff~cdc$gender, main="Boxplot without Outliers")
x<-10
x<-10
cdc[cdc$wtdiff==0,]
x<-10
nrow(cdc[cdc$wtdiff==0,])
boxplot(cdc$wtdiff~cdc$gender, main="Boxplot with Outliers")
#you may want to consider removing outliers to better see the comparision in the boxplot
cdc<-cdc[cdc$wtdiff<50,] #only include rows where twdiff is <100
cdc<-cdc[cdc$wtdiff>-50,] #only include rows where twdiff is >-100
boxplot(cdc$wtdiff~cdc$gender, main="Boxplot without Outliers")
boxplot(cdc$wtdiff~cdc$gender, main="Boxplot with Outliers")
#you may want to consider removing outliers to better see the comparision in the boxplot
cdc<-cdc[cdc$wtdiff<50,] #only include rows where twdiff is <100
cdc<-cdc[cdc$wtdiff>-40,] #only include rows where twdiff is >-100
boxplot(cdc$wtdiff~cdc$gender, main="Boxplot without Outliers")
boxplot(cdc$wtdiff~cdc$gender, main="Boxplot with Outliers")
#you may want to consider removing outliers to better see the comparision in the boxplot
cdc<-cdc[cdc$wtdiff<50,] #only include rows where twdiff is <100
cdc<-cdc[cdc$wtdiff>-30,] #only include rows where twdiff is >-100
boxplot(cdc$wtdiff~cdc$gender, main="Boxplot without Outliers")
setwd("~/OneDrive/MATH0116/Exams")
image<-read_image("NutritionGraph.png")
colors()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width = 5, fig.height=5)
cars <-read.csv("~/datasets/cars.csv")
cars <-read.csv("~/datasets/cars.csv")
cars <-read.csv("~/datasets/cars.csv")
cars <-read.csv("cars.csv")
setwd("~/OneDrive/MATH0116/Labs")
cars <-read.csv("cars.csv")
cars <-read.csv("cars.csv")
cars <-read.csv("~/datasets/cars.csv")
cars <-read.csv("/datasets/cars.csv")
cars <-read.csv("~/OneDrive/MATH0116/Labs/datasets/cars.csv")
View(cars)
plot(cars$weight, cars$mpg)
plot(cars$wt, cars$mpg)
plot(cars$wt, cars$mpg)
plot(cars$wt, cars$mpg, xlab="Weight", ylab="Miles Per Gallon", pch=19)
plot(cars$wt, cars$mpg)
plot(cars$wt, cars$mpg, xlab="Weight", ylab="Miles Per Gallon (MPG)", pch=19, main="Cars", sub="Analyzing the Relationship Between Weight and MPG")
plot(cars$wt, cars$mpg)
plot(cars$wt, cars$mpg, xlab="Weight", ylab="Miles Per Gallon (MPG)", pch=19, main="Cars: Analyzing the Relationship Between Weight and MPG")
plot(cars$wt, cars$mpg)
plot(cars$wt, cars$mpg, xlab="Weight", ylab="Miles Per Gallon (MPG)", pch=19, main="Cars: Analyzing the Relationship Between Weight and MPG", ylim=c(0,40))
plot(cars$wt, cars$mpg)
plot(cars$wt, cars$mpg, xlab="Weight", ylab="Miles Per Gallon (MPG)", pch=19, main="Cars: Analyzing the Relationship Between Weight and MPG", ylim=c(0,40), xlim=c(0,6))
boxplot(cars$mpg~cars$cyl )
boxplot(cars$mpg~cars$cyl, col=c(red) )
boxplot(cars$mpg~cars$cyl, col=c("red"))
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl, col="red")
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl, col="red")
boxplot(cars$mpg~cars$cyl, col=c("red", "orange", "yellow")
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl, col="red")
boxplot(cars$mpg~cars$cyl, col=c("red", "orange", "yellow"))
colors() #views all the color options
#or use HEX colors
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl, col="red")
boxplot(cars$mpg~cars$cyl, col=c("red", "orange", "yellow"))
boxplot(cars$mpg~cars$cyl, col=c("gold2", "gold3", "gold4"))
boxplot(cars$hp~cars$cyl)
boxplot(cars$hp~cars$carb)
boxplot(cars$hp~cars$gear)
boxplot(cars$hp~cars$am)
boxplot(cars$hp~cars$cyl)
table(cars$cyl, cars$am)
boxplot(table(cars$cyl, cars$am))
barplot(table(cars$cyl, cars$am))
barplot(table(cars$cyl, cars$am))
barplot(table(cars$cyl, cars$am), col=c("gold1", "gold2", "gold3"))
barplot(table(cars$cyl, cars$am))
barplot(table(cars$cyl, cars$am), col=c("gold1", "gold2", "gold3"), legend=T)
barplot(table(cars$cyl, cars$am))
barplot(table(cars$cyl, cars$am), col=c("gold1", "gold2", "gold3"))
plot(cars$wt, cars$mpg)
plot(cars$wt, cars$mpg)
setwd("~/OneDrive/MATH0116/Datasets")
View(cars)
plot(cars$wt, cars$mpg)
plot(cars$wt, cars$mpg, main="Cars")
plot(cars$wt, cars$mpg, main="Cars", ylab="Miles per Gallon (MPG)")
plot(cars$wt, cars$mpg, main="Cars", ylab="Miles per Gallon (MPG)", xlab="Weight")
plot(cars$wt, cars$mpg, main="Cars", ylab="Miles per Gallon (MPG)", xlab="Weight (1000lbs)")
plot(cars$wt, cars$mpg, main="Cars", ylab="Miles per Gallon (MPG)", xlab="Weight (1000lbs)", ylim=c(0,40))
plot(cars$wt, cars$mpg, main="Cars", ylab="Miles per Gallon (MPG)", xlab="Weight (1000lbs)", ylim=c(0,40), cex=19)
plot(cars$wt, cars$mpg, main="Cars", ylab="Miles per Gallon (MPG)", xlab="Weight (1000lbs)", ylim=c(0,40), pch=19)
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl, col="red")
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl, col="red")
boxplot(cars$mpg~cars$cyl, col=c("red", "orange", "yellow"))
boxplot(cars$mpg~cars$cyl)
colors() #views all the color options
#or use HEX colors
boxplot(cars$mpg~cars$cyl)
boxplot(cars$mpg~cars$cyl, col="red")
boxplot(cars$mpg~cars$cyl, col=c("red", "orange", "yellow"))
boxplot(cars$mpg~cars$cyl, col="burlywood1")
boxplot(cars$hp~cars$cyl)
?barplot
barplot(table(cars$cyl, cars$am), legend=T)
barplot(table(cars$am, cars$cyl ), legend=T, legend.text=)
barplot(table(cars$am, cars$cyl ), legend.text=)
barplot(table(cars$am, cars$cyl ))
barplot(table(cars$am, cars$cyl ), legend=T)
barplot(table(cars$am, cars$cyl ), legend=T, legend.text=c("Manual", "Automatic"))
barplot(table(cars$am, cars$cyl ))
legend(legend.text=c("Manual", "Automatic"))
barplot(table(cars$am, cars$cyl ))
legend("top", legend.text=c("Manual", "Automatic"))
barplot(table(cars$am, cars$cyl), legend=T, legend.text=c("Manual", "Automatic"))
barplot(table(cars$am, cars$cyl), legend=T, legend.text=c("Manual", "Automatic"), args.legend=list(title="Transmission Type"))
barplot(table(cars$am, cars$cyl), legend=T, legend.text=c("Manual", "Automatic"), args.legend=list(title="Transmission Type"))
barplot(table(cars$am, cars$cyl), legend=T, legend.text=c("Manual", "Automatic"), args.legend=list(title="Transmission Type"), yaxs=c(0,15,1))
barplot(table(cars$am, cars$cyl), legend=T, legend.text=c("Manual", "Automatic"), args.legend=list(title="Transmission Type"), ylim=c(0,15))
colors() #views all the color options
#or use HEX colors
colors() #views all the color options
#or use HEX colors
plot(cars$wt, cars$mpg)
(-4)^3
64/3
64/3+16+12
64/3+4^2-3*4
8/3+4-6
options
options(digits=2)
2/7
?pnorm
832/16
832/32
832-32*26
832*26-16*26^2
48+42+2
42/92
.44/0.88
0.44/0.498
(122/279)/(139/279)
0.57*0.37
0.43*0.44
?color
color()
xcolor
xcolor()
colors()
11+1-+9+8
11+10+9+8
11+6+10+9+8
setwd("~/Documents/GitHub/Recycled-Individuals/Submitted to EE/Revisions/gitdiff")
